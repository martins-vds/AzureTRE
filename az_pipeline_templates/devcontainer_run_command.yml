parameters:
  - name: DISPLAY_NAME
    default: "Run command in DevContainer"
  - name: COMMAND
    type: string
  - name: DEVCONTAINER_TAG
    default: ""
  - name: AZURE_CREDENTIALS
    default: ""
  - name: SECONDARY_AZURE_CREDENTIALS
    default: ""
  - name: AZURE_ENVIRONMENT
    type: string
    default: "AzureCloud"
  - name: API_CLIENT_ID
    default: ""
  - name: AAD_TENANT_ID
    default: ""
  - name: TEST_APP_ID
    default: ""
  - name: TEST_ACCOUNT_CLIENT_ID
    default: ""
  - name: TEST_ACCOUNT_CLIENT_SECRET
    default: ""
  - name: TEST_WORKSPACE_APP_ID
    default: ""
  - name: TEST_WORKSPACE_APP_SECRET
    default: ""
  - name: TRE_ID
    default: ""
  - name: TERRAFORM_STATE_CONTAINER_NAME
    default: "tfstate"
  - name: MGMT_RESOURCE_GROUP_NAME
    default: ""
  - name: MGMT_STORAGE_ACCOUNT_NAME
    default: ""
  - name: CORE_ADDRESS_SPACE
    type: string
    default: "10.0.0.0/22"
  - name: TRE_ADDRESS_SPACE
    type: string
    default: "10.0.0.0/16"
  - name: ENABLE_SWAGGER
    default: "false"
    type: string
    values:
      - "true"
      - "false"
  - name: SWAGGER_UI_CLIENT_ID
    default: ""
  - name: API_CLIENT_SECRET
    default: ""
  - name: APPLICATION_ADMIN_CLIENT_ID
    default: ""
  - name: APPLICATION_ADMIN_CLIENT_SECRET
    default: ""
  - name: ACR_NAME
    default: ""
  - name: LOCATION
    default: ""
  - name: BUNDLE_TYPE
    default: ""
  - name: WORKSPACE_SERVICE_NAME
    default: ""
  - name: IS_API_SECURED
    default: "true"
  - name: STATEFUL_RESOURCES_LOCKED
    default: "true"
  - name: ENABLE_AIRLOCK_MALWARE_SCANNING
    default: "false"
  - name: CI_CACHE_ACR_NAME
    default: ""
  - name: TF_LOG
    default: ""
  - name: CORE_APP_SERVICE_PLAN_SKU
    default: "P1v2"
    values:
      - "P1v2"
  - name: WORKSPACE_APP_SERVICE_PLAN_SKU
    default: "P1v2"
    values:
      - "P1v2"
  - name: RESOURCE_PROCESSOR_NUMBER_PROCESSES_PER_INSTANCE
    type: number
    default: "5"
    values:
      - "1"
      - "2"
      - "3"
      - "4"
      - "5"
  - name: E2E_TESTS_NUMBER_PROCESSES
    default: ""
  - name: RP_BUNDLE_VALUES
    type: object
    default: {}
  - name: SUBSCRIPTION_ID
    default: ""
  - name: SECONDARY_SUBSCRIPTION_ID
    default: ""
  - name: MGMT_STORAGE_ALLOWED_SUBNET_IDS
    default: "'[]'"
  - name: BOOTSTRAP_STORAGE_ALLOWED_SUBNET_IDS
    default: ""
  - name: MGMT_ACR_ALLOWED_NETWORKS
    default: "'[]'"
  - name: MGMT_ACR_PRIVATE_ENDPOINT_SUBNET_ID
    default: ""
  - name: CORE_STORAGE_ALLOWED_SUBNET_IDS
    default: "'[]'"
  - name: CORE_KEYVAULT_ALLOWED_SUBNET_IDS
    default: "'[]'"
  - name: CORE_STATIC_WEB_ALLOWED_SUBNET_IDS
    default: "'[]'"
  - name: CORE_API_ALLOWED_DEVOPS_SUBNET_ID
    default: ""
  - name: CORE_API_ADDITIONAL_ALLOWED_SUBNET_IDS
    default: ""
  - name: CORE_DDOS_PLAN_ID
    default: ""
  - name: LOGGING_LEVEL
    default: "INFO"
    values:
      - "DEBUG"
      - "INFO"
      - "WARN"
      - "ERROR"
  - name: USE_CORE_PRIVATE_DNS_ZONES
    default: "false"
    type: string
  - name: PRIVATE_DNS_ZONES_RESOURCE_GROUP_NAME
    default: ""
  - name: PRIVATE_DNS_ZONE_AZURE_CREDENTIALS
    default: "secondary"
    type: string
    values:
      - "primary"
      - "secondary"
  - name: DEPLOY_APP_GATEWAY
    default: "false"
    type: string
  - name: DEPLOY_BASTION
    default: "false"
    type: string
  - name: DEPLOY_FIREWALL
    default: "false"
    type: string
steps:
  - task: AzureCLI@2
    displayName: '${{ parameters.DISPLAY_NAME }} - Set Main Azure Credentials'
    inputs:
      azureSubscription: ${{ parameters.AZURE_CREDENTIALS }}
      addSpnToEnvironment: true
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        echo "##vso[task.setvariable variable=AZURE_CREDENTIALS_TENANT_ID;isSecret=true]$tenantId"
        echo "##vso[task.setvariable variable=AZURE_CREDENTIALS_CLIENT_ID;isSecret=true]$servicePrincipalId"
        echo "##vso[task.setvariable variable=AZURE_CREDENTIALS_CLIENT_SECRET;isSecret=true]$servicePrincipalKey"

  - ${{ if ne(parameters.SECONDARY_AZURE_CREDENTIALS, '') }}:
    - task: AzureCLI@2
      displayName: '${{ parameters.DISPLAY_NAME }} - Set Secondary Azure Credentials'
      inputs:
        azureSubscription: ${{ parameters.SECONDARY_AZURE_CREDENTIALS }}
        addSpnToEnvironment: true
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "##vso[task.setvariable variable=SECONDARY_AZURE_CREDENTIALS_TENANT_ID;isSecret=true]$tenantId"
          echo "##vso[task.setvariable variable=SECONDARY_AZURE_CREDENTIALS_CLIENT_ID;isSecret=true]$servicePrincipalId"
          echo "##vso[task.setvariable variable=SECONDARY_AZURE_CREDENTIALS_CLIENT_SECRET;isSecret=true]$servicePrincipalKey"

  - ${{ if not(contains(parameters.COMMAND, 'bootstrap')) }}:
    - task: AzureCLI@2
      displayName: '${{ parameters.DISPLAY_NAME }} - ACR Login'
      inputs:
        azureSubscription: ${{ parameters.AZURE_CREDENTIALS }}
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          # shellcheck disable=SC2034,SC2015,SC2125
          for i in {1..3}; do
            az acr login --name "${{ parameters.CI_CACHE_ACR_NAME }}" && ec=0 && break || ec=$? && sleep 10
          done
          if [ $ec -eq 0 ]; then
            echo "Logged into ${{ parameters.CI_CACHE_ACR_NAME }}"
          fi
          # shellcheck disable=SC2242
          (exit $ec)

  - task: Bash@3
    displayName: '${{ parameters.DISPLAY_NAME }} - Construct TRE URL'
    inputs:
      targetType: 'inline'
      script: |
        if [ "${{ parameters.DEPLOY_APP_GATEWAY }}" == "false" ]; then
          tre_ui_url="https://stweb${{ parameters.TRE_ID }}.z9.web.core.windows.net"
          tre_url="https://api-${{ parameters.TRE_ID }}.azurewebsites.net"
        else
          source devops/scripts/construct_tre_url.sh
          tre_url=$(construct_tre_url "${{ parameters.TRE_ID }}" "${{ parameters.LOCATION }}" "${{ parameters.AZURE_ENVIRONMENT }}")
          tre_ui_url=$tre_url
        fi

        echo "##vso[task.setvariable variable=TRE_URL;]$tre_url"
        echo "##vso[task.setvariable variable=TRE_UI_URL;]$tre_ui_url"
        echo "Set TRE_URL to $tre_url"
        echo "Set TRE_UI_URL to $tre_ui_url"

  - task: Bash@3
    displayName: '${{ parameters.DISPLAY_NAME }} - Construct ARM_ENVIRONMENT'
    inputs:
      targetType: 'inline'
      script: |
        source devops/scripts/convert_azure_env_to_arm_env.sh
        arm_environment=$(convert_azure_env_to_arm_env "${{ parameters.AZURE_ENVIRONMENT }}")
        echo "##vso[task.setvariable variable=ARM_ENVIRONMENT;]$arm_environment"
        echo "Set ARM_ENVIRONMENT to $arm_environment"

  - task: AzureCLI@2
    displayName: '${{ parameters.DISPLAY_NAME }} - Construct ACR Domain Suffix'
    inputs:
      azureSubscription: ${{ parameters.AZURE_CREDENTIALS }}
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        ACR_DOMAIN_SUFFIX=$(az cloud show --query suffixes.acrLoginServerEndpoint --output tsv)
        echo "##vso[task.setvariable variable=ACR_DOMAIN_SUFFIX;]$ACR_DOMAIN_SUFFIX"
        echo "Set ACR_DOMAIN_SUFFIX to $ACR_DOMAIN_SUFFIX"

  - task: AzureCLI@2
    displayName: '${{ parameters.DISPLAY_NAME }} - Run command in DevContainer'
    inputs:
      azureSubscription: ${{ parameters.AZURE_CREDENTIALS }}
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        bundle_values=$(echo '${{ convertToJson(parameters.RP_BUNDLE_VALUES) }}' | jq)

        docker run --rm --mount \
          "type=bind,src=$(Build.SourcesDirectory),dst=/workspaces/tre" \
          -v /var/run/docker.sock:/var/run/docker.sock \
          --workdir /workspaces/tre \
          --user vscode \
          -e TF_INPUT="0" \
          -e TF_IN_AUTOMATION="1" \
          -e USE_ENV_VARS_NOT_FILES="true" \
          -e BUNDLE_TYPE="${{ parameters.BUNDLE_TYPE }}" \
          -e WORKSPACE_SERVICE_NAME="${{ parameters.WORKSPACE_SERVICE_NAME }}" \
          -e ARM_ENVIRONMENT="$(ARM_ENVIRONMENT)" \
          -e TF_VAR_arm_environment="$(ARM_ENVIRONMENT)" \
          -e AZURE_ENVIRONMENT="$(AZURE_ENVIRONMENT)" \
          -e LOCATION="${{ parameters.LOCATION }}" \
          -e TF_VAR_location="${{ parameters.LOCATION }}" \
          -e RESOURCE_LOCATION="${{ parameters.LOCATION }}" \
          -e ARM_CLIENT_ID="$(AZURE_CREDENTIALS_CLIENT_ID)" \
          -e ARM_CLIENT_SECRET="$(AZURE_CREDENTIALS_CLIENT_SECRET)" \
          -e ARM_TENANT_ID="$(AZURE_CREDENTIALS_TENANT_ID)" \
          -e ARM_SUBSCRIPTION_ID="${{ parameters.SUBSCRIPTION_ID }}" \
          -e TF_VAR_secondary_arm_client_id="$(SECONDARY_AZURE_CREDENTIALS_CLIENT_ID)" \
          -e TF_VAR_secondary_arm_client_secret="$(SECONDARY_AZURE_CREDENTIALS_CLIENT_SECRET)" \
          -e TF_VAR_secondary_arm_tenant_id="$(SECONDARY_AZURE_CREDENTIALS_TENANT_ID)" \
          -e TF_VAR_secondary_arm_subscription_id="${{ parameters.SECONDARY_SUBSCRIPTION_ID }}" \
          -e TF_VAR_terraform_state_container_name="${{ parameters.TERRAFORM_STATE_CONTAINER_NAME }}" \
          -e TF_VAR_mgmt_storage_account_name="${{ parameters.MGMT_STORAGE_ACCOUNT_NAME }}" \
          -e TF_VAR_mgmt_resource_group_name="${{ parameters.MGMT_RESOURCE_GROUP_NAME }}" \
          -e ACR_NAME=${{ parameters.ACR_NAME }} \
          -e TF_VAR_acr_name=${{ parameters.ACR_NAME }} \
          -e TF_VAR_aad_tenant_id="${{ parameters.AAD_TENANT_ID }}" \
          -e TF_VAR_api_client_id="${{ parameters.API_CLIENT_ID }}" \
          -e TF_VAR_api_client_secret="${{ parameters.API_CLIENT_SECRET }}" \
          -e TF_VAR_application_admin_client_id="${{ parameters.APPLICATION_ADMIN_CLIENT_ID }}" \
          -e TF_VAR_application_admin_client_secret="${{ parameters.APPLICATION_ADMIN_CLIENT_SECRET }}" \
          -e TF_VAR_arm_subscription_id="${{ parameters.SUBSCRIPTION_ID }}" \
          -e TF_VAR_enable_swagger="${{ parameters.ENABLE_SWAGGER }}" \
          -e SWAGGER_UI_CLIENT_ID="${{ parameters.SWAGGER_UI_CLIENT_ID }}" \
          -e TF_VAR_swagger_ui_client_id="${{ parameters.SWAGGER_UI_CLIENT_ID }}" \
          -e TF_VAR_core_address_space="${{ parameters.CORE_ADDRESS_SPACE }}" \
          -e TF_VAR_tre_address_space="${{ parameters.TRE_ADDRESS_SPACE }}" \
          -e API_CLIENT_ID="${{ parameters.API_CLIENT_ID }}" \
          -e AAD_TENANT_ID="${{ parameters.AAD_TENANT_ID }}" \
          -e TRE_ID="${{ parameters.TRE_ID }}" \
          -e TF_VAR_tre_id="${{ parameters.TRE_ID }}" \
          -e TRE_URL="$(TRE_URL)" \
          -e TEST_WORKSPACE_APP_ID="${{ parameters.TEST_WORKSPACE_APP_ID }}" \
          -e TEST_WORKSPACE_APP_SECRET="${{ parameters.TEST_WORKSPACE_APP_SECRET }}" \
          -e TEST_APP_ID="${{ parameters.TEST_APP_ID }}" \
          -e TEST_ACCOUNT_CLIENT_ID="${{ parameters.TEST_ACCOUNT_CLIENT_ID }}" \
          -e TEST_ACCOUNT_CLIENT_SECRET="${{ parameters.TEST_ACCOUNT_CLIENT_SECRET }}" \
          -e IS_API_SECURED=${{ parameters.IS_API_SECURED }} \
          -e DOCKER_BUILDKIT=1 \
          -e TF_VAR_stateful_resources_locked=${{ parameters.STATEFUL_RESOURCES_LOCKED }} \
          -e TF_VAR_enable_airlock_malware_scanning=${{ parameters.ENABLE_AIRLOCK_MALWARE_SCANNING }} \
          -e CI_CACHE_ACR_NAME="${{ parameters.CI_CACHE_ACR_NAME }}" \
          -e TF_VAR_core_app_service_plan_sku="${{ parameters.CORE_APP_SERVICE_PLAN_SKU }}" \
          -e WORKSPACE_APP_SERVICE_PLAN_SKU="${{ parameters.WORKSPACE_APP_SERVICE_PLAN_SKU }}" \
          -e TF_VAR_rp_bundle_values="$bundle_values" \
          -e TF_VAR_resource_processor_number_processes_per_instance="${{ parameters.RESOURCE_PROCESSOR_NUMBER_PROCESSES_PER_INSTANCE }}" \
          -e E2E_TESTS_NUMBER_PROCESSES="${{ parameters.E2E_TESTS_NUMBER_PROCESSES }}" \
          -e TF_VAR_logging_level="${{ parameters.LOGGING_LEVEL }}" \
          -e BOOTSTRAP_STORAGE_ALLOWED_SUBNET_IDS=${{ parameters.BOOTSTRAP_STORAGE_ALLOWED_SUBNET_IDS }} \
          -e TF_VAR_mgmt_storage_allowed_subnet_ids=${{ parameters.MGMT_STORAGE_ALLOWED_SUBNET_IDS }} \
          -e TF_VAR_mgmt_acr_allowed_networks=${{ parameters.MGMT_ACR_ALLOWED_NETWORKS }} \
          -e TF_VAR_mgmt_acr_private_endpoint_subnet_id=${{ parameters.MGMT_ACR_PRIVATE_ENDPOINT_SUBNET_ID }} \
          -e TF_VAR_core_ddos_plan_id="${{ parameters.CORE_DDOS_PLAN_ID }}" \
          -e TF_VAR_core_storage_allowed_subnet_ids=${{ parameters.CORE_STORAGE_ALLOWED_SUBNET_IDS }} \
          -e TF_VAR_core_keyvault_allowed_subnet_ids=${{ parameters.CORE_KEYVAULT_ALLOWED_SUBNET_IDS }} \
          -e TF_VAR_core_static_web_allowed_subnet_ids=${{ parameters.CORE_STATIC_WEB_ALLOWED_SUBNET_IDS }} \
          -e TF_VAR_core_api_allowed_devops_subnet_id=${{ parameters.CORE_API_ALLOWED_DEVOPS_SUBNET_ID }} \
          -e TF_VAR_core_api_additional_allowed_subnet_ids="${{ parameters.CORE_API_ADDITIONAL_ALLOWED_SUBNET_IDS }}" \
          -e TF_VAR_use_core_private_dns_zones=${{ parameters.USE_CORE_PRIVATE_DNS_ZONES }} \
          -e TF_VAR_private_dns_zones_resource_group_name=${{ parameters.PRIVATE_DNS_ZONES_RESOURCE_GROUP_NAME }} \
          -e TF_VAR_private_dns_zone_azure_credentials=${{ parameters.PRIVATE_DNS_ZONE_AZURE_CREDENTIALS }} \
          -e TF_VAR_deploy_app_gateway=${{ parameters.DEPLOY_APP_GATEWAY }} \
          -e TF_VAR_deploy_bastion=${{ parameters.DEPLOY_BASTION }} \
          -e TF_VAR_deploy_firewall=${{ parameters.DEPLOY_FIREWALL }} \
          -e DEPLOY_APP_GATEWAY=${{ parameters.DEPLOY_APP_GATEWAY }} \
          -e TRE_UI_URL="$(TRE_UI_URL)" \
          '${{ parameters.CI_CACHE_ACR_NAME }}$(ACR_DOMAIN_SUFFIX)/tredev:${{ parameters.DEVCONTAINER_TAG }}' \
        bash -c "${{ parameters.COMMAND }}"
