---
schemaVersion: 1.0.0
name: tre-service-avd
version: 0.0.16
description: "Azure Virtual Desktop"
dockerfile: Dockerfile.tmpl
registry: azuretre

custom:
  # For information on vm_sizes and image_options, see README.me in the bastion/user-resources folder
  vm_sizes:
    "2 CPU | 8GB RAM": Standard_D2s_v5
    "4 CPU | 16GB RAM": Standard_D4s_v5
    "8 CPU | 32GB RAM": Standard_D8s_v5
    "16 CPU | 64GB RAM": Standard_D16s_v5
  image_options:
    "Windows 10":
      source_image_reference:
        publisher: MicrosoftWindowsDesktop
        offer: Windows-10
        sku: win10-21h2-pro-g2
        version: latest
      conda_config: false
    "Windows 11":
      source_image_reference:
        publisher: microsoftwindowsdesktop
        offer: windows-11
        sku: win11-21h2-pro
        version: latest
      conda_config: false
    "Server 2019 Data Science VM":
      source_image_reference:
        publisher: microsoft-dsvm
        offer: dsvm-win-2019
        sku: winserver-2019
        version: latest
      conda_config: true
    "Server 2022 Data Science VM":
      source_image_reference:
        publisher: microsoft-dsvm
        offer: dsvm-win-2022
        sku: winserver-2022
        version: latest
      conda_config: true
    # For information on using custom images, see README.me in the bastion/user-resources folder
    # "Custom Image From Gallery":
    #   source_image_name: your-image
    #   conda_config: true

credentials:
  # Credentials for interacting with Azure
  - name: azure_tenant_id
    env: ARM_TENANT_ID
  - name: azure_subscription_id
    env: ARM_SUBSCRIPTION_ID
  - name: azure_client_id
    env: ARM_CLIENT_ID
  - name: azure_client_secret
    env: ARM_CLIENT_SECRET
  # Credentials for interacting with the AAD Auth tenant
  - name: auth_client_id
    env: AUTH_CLIENT_ID
  - name: auth_client_secret
    env: AUTH_CLIENT_SECRET
  - name: auth_tenant_id
    env: AUTH_TENANT_ID

parameters:
  - name: os_image
    type: string
    default: "Windows 10"
  - name: vm_size
    type: string
    default: "2 CPU | 8GB RAM"
  - name: shared_storage_access
    type: boolean
    default: true
  - name: shared_storage_name
    type: string
    default: "vm-shared-storage"
  - name: arm_environment
    type: string
  - name: vm_users_object_id
    type: string
    description: "The object ID of the Azure AD group that should have access to the VM"
    default: ""
  - name: use_core_app_gateway
    type: boolean
    default: false
  - name: workspace_id
    type: string
  - name: tre_id
    type: string
    description: "The ID of the parent TRE instance e.g., mytre-dev-3142"
  - name: id
    type: string
    description: "Resource ID"
  - name: image_gallery_id
    type: string
    description: Azure resource ID for the compute image gallery to pull images from (if specifying custom images by name)
    default: ""
  - name: tfstate_resource_group_name
    type: string
    description: "Resource group containing the Terraform state storage account"
  - name: tfstate_storage_account_name
    type: string
    description: "The name of the Terraform state storage account"
  - name: tfstate_container_name
    type: string
    default: "tfstate"
    description: "The name of the Terraform state storage container"
  - name: arm_use_msi
    env: ARM_USE_MSI
    type: boolean
    default: false
  - name: arm_environment
    env: ARM_ENVIRONMENT
    type: string
    default: "public"
  - name: azure_environment
    type: string
    default: "AzureCloud"
    description: "Used by Azure CLI to set the Azure environment"
    env: AZURE_ENVIRONMENT

outputs:
  - name: connection_uri
    type: string
    applyTo:
      - install
      - upgrade

mixins:
  - terraform:
      clientVersion: 1.7.0

install:
  - terraform:
      description: "Deploy shared service"
      vars:
        workspace_id: ${ bundle.parameters.workspace_id }
        tre_id: ${ bundle.parameters.tre_id }
        tre_resource_id: ${ bundle.parameters.id }
        image: ${ bundle.parameters.os_image }
        vm_size: ${ bundle.parameters.vm_size }
        vm_users_object_id: ${ bundle.parameters.vm_users_object_id }
        shared_storage_access: ${ bundle.parameters.shared_storage_access }
        shared_storage_name: ${ bundle.parameters.shared_storage_name }
        image_gallery_id: ${ bundle.parameters.image_gallery_id }
        use_core_app_gateway: ${ bundle.parameters.use_core_app_gateway }
        auth_client_id: ${ bundle.credentials.auth_client_id }
        auth_client_secret: ${ bundle.credentials.auth_client_secret }
        auth_tenant_id: ${ bundle.credentials.auth_tenant_id }
      backendConfig:
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: tre-service-avd-${ bundle.parameters.tre_id }
      outputs:
        - name: connection_uri

upgrade:
  - terraform:
      description: "Upgrade shared service"
      vars:
        workspace_id: ${ bundle.parameters.workspace_id }
        tre_id: ${ bundle.parameters.tre_id }
        tre_resource_id: ${ bundle.parameters.id }
        image: ${ bundle.parameters.os_image }
        vm_size: ${ bundle.parameters.vm_size }
        vm_users_object_id: ${ bundle.parameters.vm_users_object_id }
        shared_storage_access: ${ bundle.parameters.shared_storage_access }
        shared_storage_name: ${ bundle.parameters.shared_storage_name }
        image_gallery_id: ${ bundle.parameters.image_gallery_id }
        use_core_app_gateway: ${ bundle.parameters.use_core_app_gateway }
        auth_client_id: ${ bundle.credentials.auth_client_id }
        auth_client_secret: ${ bundle.credentials.auth_client_secret }
        auth_tenant_id: ${ bundle.credentials.auth_tenant_id }
      backendConfig:
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: tre-service-avd-${ bundle.parameters.tre_id }
      outputs:
        - name: connection_uri

uninstall:
  - terraform:
      description: "Tear down shared service"
      vars:
        workspace_id: ${ bundle.parameters.workspace_id }
        tre_id: ${ bundle.parameters.tre_id }
        tre_resource_id: ${ bundle.parameters.id }
        image: ${ bundle.parameters.os_image }
        vm_size: ${ bundle.parameters.vm_size }
        vm_users_object_id: ${ bundle.parameters.vm_users_object_id }
        shared_storage_access: ${ bundle.parameters.shared_storage_access }
        shared_storage_name: ${ bundle.parameters.shared_storage_name }
        image_gallery_id: ${ bundle.parameters.image_gallery_id }
        use_core_app_gateway: ${ bundle.parameters.use_core_app_gateway }
        auth_client_id: ${ bundle.credentials.auth_client_id }
        auth_client_secret: ${ bundle.credentials.auth_client_secret }
        auth_tenant_id: ${ bundle.credentials.auth_tenant_id }
      backendConfig:
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: tre-service-avd-${ bundle.parameters.tre_id }
